openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /accounts/patient/:
    get:
      operationId: listPatients
      description: ViewSet to manage Patient model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
          description: ''
      tags:
      - accounts
    post:
      operationId: createPatient
      description: ViewSet to manage Patient model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
      tags:
      - accounts
  /accounts/patient/{id}/:
    get:
      operationId: retrievePatient
      description: ViewSet to manage Patient model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this patient.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
      tags:
      - accounts
    put:
      operationId: updatePatient
      description: ViewSet to manage Patient model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this patient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdatePatient
      description: ViewSet to manage Patient model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this patient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyPatient
      description: ViewSet to manage Patient model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this patient.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/employee/:
    get:
      operationId: listEmployees
      description: ViewSet for handling Employee model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
          description: ''
      tags:
      - accounts
    post:
      operationId: createEmployee
      description: ViewSet for handling Employee model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
      tags:
      - accounts
  /accounts/employee/{id}/:
    get:
      operationId: retrieveEmployee
      description: ViewSet for handling Employee model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this employee.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateEmployee
      description: ViewSet for handling Employee model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this employee.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateEmployee
      description: ViewSet for handling Employee model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this employee.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyEmployee
      description: ViewSet for handling Employee model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this employee.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/doctor/:
    get:
      operationId: listDoctors
      description: ViewSet for handling Doctor model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'
          description: ''
      tags:
      - accounts
    post:
      operationId: createDoctor
      description: ViewSet for handling Doctor model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Doctor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
      tags:
      - accounts
  /accounts/doctor/{id}/:
    get:
      operationId: retrieveDoctor
      description: ViewSet for handling Doctor model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this doctor.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateDoctor
      description: ViewSet for handling Doctor model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this doctor.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Doctor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateDoctor
      description: ViewSet for handling Doctor model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this doctor.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Doctor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyDoctor
      description: ViewSet for handling Doctor model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this doctor.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/phone/:
    get:
      operationId: listPhones
      description: ViewSet for handling Phone model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - accounts
    post:
      operationId: createPhone
      description: ViewSet for handling Phone model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - accounts
  /accounts/phone/{id}/:
    get:
      operationId: retrievePhone
      description: ViewSet for handling Phone model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - accounts
    put:
      operationId: updatePhone
      description: ViewSet for handling Phone model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdatePhone
      description: ViewSet for handling Phone model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyPhone
      description: ViewSet for handling Phone model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/address/:
    get:
      operationId: listAddresses
      description: ViewSet for handling Address model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - accounts
    post:
      operationId: createAddress
      description: ViewSet for handling Address model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - accounts
  /accounts/address/{id}/:
    get:
      operationId: retrieveAddress
      description: ViewSet for handling Address model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateAddress
      description: ViewSet for handling Address model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateAddress
      description: ViewSet for handling Address model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyAddress
      description: ViewSet for handling Address model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/user-image/:
    get:
      operationId: listUserImages
      description: ViewSet for handling UserImage model.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserImage'
          description: ''
      tags:
      - accounts
    post:
      operationId: createUserImage
      description: ViewSet for handling UserImage model.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserImage'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImage'
          description: ''
      tags:
      - accounts
  /accounts/user-image/{id}/:
    get:
      operationId: retrieveUserImage
      description: ViewSet for handling UserImage model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user image.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImage'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateUserImage
      description: ViewSet for handling UserImage model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImage'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateUserImage
      description: ViewSet for handling UserImage model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImage'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyUserImage
      description: ViewSet for handling UserImage model.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user image.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/group/:
    get:
      operationId: listGroups
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - accounts
    post:
      operationId: createGroup
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - accounts
  /accounts/group/{id}/:
    get:
      operationId: retrieveGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/permission/:
    get:
      operationId: listPermissions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
          description: ''
      tags:
      - accounts
    post:
      operationId: createPermission
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
      tags:
      - accounts
  /accounts/permission/{id}/:
    get:
      operationId: retrievePermission
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this permission.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
      tags:
      - accounts
    put:
      operationId: updatePermission
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this permission.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdatePermission
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this permission.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
      tags:
      - accounts
    delete:
      operationId: destroyPermission
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this permission.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - accounts
  /accounts/user-details/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - accounts
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - accounts
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - accounts
  /visit/visit/:
    get:
      operationId: listVisits
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ticket
        required: false
        in: query
        description: ticket
        schema:
          type: string
      - name: datatime__year
        required: false
        in: query
        description: datatime__year
        schema:
          type: string
      - name: datatime__month
        required: false
        in: query
        description: datatime__month
        schema:
          type: string
      - name: datatime__day
        required: false
        in: query
        description: datatime__day
        schema:
          type: string
      - name: doctors
        required: false
        in: query
        description: doctors
        schema:
          type: string
      - name: patient
        required: false
        in: query
        description: patient
        schema:
          type: string
      - name: is_deleted
        required: false
        in: query
        description: is_deleted
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Visit'
          description: ''
      tags:
      - visit
    post:
      operationId: createVisit
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
      tags:
      - visit
  /visit/visit/{id}/:
    get:
      operationId: retrieveVisit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this visit.
        schema:
          type: string
      - name: ticket
        required: false
        in: query
        description: ticket
        schema:
          type: string
      - name: datatime__year
        required: false
        in: query
        description: datatime__year
        schema:
          type: string
      - name: datatime__month
        required: false
        in: query
        description: datatime__month
        schema:
          type: string
      - name: datatime__day
        required: false
        in: query
        description: datatime__day
        schema:
          type: string
      - name: doctors
        required: false
        in: query
        description: doctors
        schema:
          type: string
      - name: patient
        required: false
        in: query
        description: patient
        schema:
          type: string
      - name: is_deleted
        required: false
        in: query
        description: is_deleted
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
      tags:
      - visit
    put:
      operationId: updateVisit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this visit.
        schema:
          type: string
      - name: ticket
        required: false
        in: query
        description: ticket
        schema:
          type: string
      - name: datatime__year
        required: false
        in: query
        description: datatime__year
        schema:
          type: string
      - name: datatime__month
        required: false
        in: query
        description: datatime__month
        schema:
          type: string
      - name: datatime__day
        required: false
        in: query
        description: datatime__day
        schema:
          type: string
      - name: doctors
        required: false
        in: query
        description: doctors
        schema:
          type: string
      - name: patient
        required: false
        in: query
        description: patient
        schema:
          type: string
      - name: is_deleted
        required: false
        in: query
        description: is_deleted
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
      tags:
      - visit
    patch:
      operationId: partialUpdateVisit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this visit.
        schema:
          type: string
      - name: ticket
        required: false
        in: query
        description: ticket
        schema:
          type: string
      - name: datatime__year
        required: false
        in: query
        description: datatime__year
        schema:
          type: string
      - name: datatime__month
        required: false
        in: query
        description: datatime__month
        schema:
          type: string
      - name: datatime__day
        required: false
        in: query
        description: datatime__day
        schema:
          type: string
      - name: doctors
        required: false
        in: query
        description: doctors
        schema:
          type: string
      - name: patient
        required: false
        in: query
        description: patient
        schema:
          type: string
      - name: is_deleted
        required: false
        in: query
        description: is_deleted
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
      tags:
      - visit
    delete:
      operationId: destroyVisit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this visit.
        schema:
          type: string
      - name: ticket
        required: false
        in: query
        description: ticket
        schema:
          type: string
      - name: datatime__year
        required: false
        in: query
        description: datatime__year
        schema:
          type: string
      - name: datatime__month
        required: false
        in: query
        description: datatime__month
        schema:
          type: string
      - name: datatime__day
        required: false
        in: query
        description: datatime__day
        schema:
          type: string
      - name: doctors
        required: false
        in: query
        description: doctors
        schema:
          type: string
      - name: patient
        required: false
        in: query
        description: patient
        schema:
          type: string
      - name: is_deleted
        required: false
        in: query
        description: is_deleted
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - visit
  /visit/measurement/:
    get:
      operationId: listMeasurements
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: weight
        required: false
        in: query
        description: weight
        schema:
          type: string
      - name: blood_pressure
        required: false
        in: query
        description: blood_pressure
        schema:
          type: string
      - name: temperature
        required: false
        in: query
        description: temperature
        schema:
          type: string
      - name: pulse
        required: false
        in: query
        description: pulse
        schema:
          type: string
      - name: oxygen_level
        required: false
        in: query
        description: oxygen_level
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Measurement'
          description: ''
      tags:
      - visit
    post:
      operationId: createMeasurement
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measurement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
      tags:
      - visit
  /visit/measurement/{id}/:
    get:
      operationId: retrieveMeasurement
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this measurement.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: weight
        required: false
        in: query
        description: weight
        schema:
          type: string
      - name: blood_pressure
        required: false
        in: query
        description: blood_pressure
        schema:
          type: string
      - name: temperature
        required: false
        in: query
        description: temperature
        schema:
          type: string
      - name: pulse
        required: false
        in: query
        description: pulse
        schema:
          type: string
      - name: oxygen_level
        required: false
        in: query
        description: oxygen_level
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
      tags:
      - visit
    put:
      operationId: updateMeasurement
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this measurement.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: weight
        required: false
        in: query
        description: weight
        schema:
          type: string
      - name: blood_pressure
        required: false
        in: query
        description: blood_pressure
        schema:
          type: string
      - name: temperature
        required: false
        in: query
        description: temperature
        schema:
          type: string
      - name: pulse
        required: false
        in: query
        description: pulse
        schema:
          type: string
      - name: oxygen_level
        required: false
        in: query
        description: oxygen_level
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measurement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
      tags:
      - visit
    patch:
      operationId: partialUpdateMeasurement
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this measurement.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: weight
        required: false
        in: query
        description: weight
        schema:
          type: string
      - name: blood_pressure
        required: false
        in: query
        description: blood_pressure
        schema:
          type: string
      - name: temperature
        required: false
        in: query
        description: temperature
        schema:
          type: string
      - name: pulse
        required: false
        in: query
        description: pulse
        schema:
          type: string
      - name: oxygen_level
        required: false
        in: query
        description: oxygen_level
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measurement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
      tags:
      - visit
    delete:
      operationId: destroyMeasurement
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this measurement.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: weight
        required: false
        in: query
        description: weight
        schema:
          type: string
      - name: blood_pressure
        required: false
        in: query
        description: blood_pressure
        schema:
          type: string
      - name: temperature
        required: false
        in: query
        description: temperature
        schema:
          type: string
      - name: pulse
        required: false
        in: query
        description: pulse
        schema:
          type: string
      - name: oxygen_level
        required: false
        in: query
        description: oxygen_level
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - visit
  /visit/attachment/:
    get:
      operationId: listAttachments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: kind
        required: false
        in: query
        description: kind
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Attachment'
          description: ''
      tags:
      - visit
    post:
      operationId: createAttachment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
      tags:
      - visit
  /visit/attachment/{id}/:
    get:
      operationId: retrieveAttachment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this attachment.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: kind
        required: false
        in: query
        description: kind
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
      tags:
      - visit
    put:
      operationId: updateAttachment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this attachment.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: kind
        required: false
        in: query
        description: kind
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
      tags:
      - visit
    patch:
      operationId: partialUpdateAttachment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this attachment.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: kind
        required: false
        in: query
        description: kind
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
      tags:
      - visit
    delete:
      operationId: destroyAttachment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this attachment.
        schema:
          type: string
      - name: visit
        required: false
        in: query
        description: visit
        schema:
          type: string
      - name: kind
        required: false
        in: query
        description: kind
        schema:
          type: string
      - name: created_at__year
        required: false
        in: query
        description: created_at__year
        schema:
          type: string
      - name: created_at__month
        required: false
        in: query
        description: created_at__month
        schema:
          type: string
      - name: created_at__day
        required: false
        in: query
        description: created_at__day
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - visit
  /visit/statistics/:
    get:
      operationId: retrieveStatistics
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
          description: ''
      tags:
      - visit
  /accounts/token/:
    post:
      operationId: createTokenObtainPair
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - accounts
  /accounts/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - accounts
  /accounts/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - accounts
components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              mobile:
                type: string
                maxLength: 255
              created_at:
                type: string
                format: date-time
                readOnly: true
              updated_at:
                type: string
                format: date-time
                readOnly: true
              user:
                type: integer
            required:
            - mobile
            - user
          readOnly: true
        address:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              street:
                type: string
                maxLength: 255
              city:
                type: string
                maxLength: 255
              governorate:
                type: string
                maxLength: 255
              created_at:
                type: string
                format: date-time
                readOnly: true
              updated_at:
                type: string
                format: date-time
                readOnly: true
              user:
                type: integer
            required:
            - street
            - city
            - governorate
            - user
          readOnly: true
        image:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              image:
                type: string
                format: binary
              created_at:
                type: string
                format: date-time
                readOnly: true
              updated_at:
                type: string
                format: date-time
                readOnly: true
              user:
                type: integer
            required:
            - image
            - user
          readOnly: true
        full_name:
          type: string
          maxLength: 255
        email:
          type: string
          nullable: true
          maxLength: 255
        gender:
          type: string
          maxLength: 255
        marital_status:
          type: string
          nullable: true
          maxLength: 255
        nationality:
          type: string
          maxLength: 255
        national_id:
          type: string
          maxLength: 255
        date_of_birth:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        disease_type:
          type: string
          maxLength: 255
        blood_type:
          type: string
          maxLength: 255
        code:
          type: string
          readOnly: true
        user:
          type: integer
          nullable: true
      required:
      - full_name
      - gender
      - national_id
      - disease_type
      - blood_type
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          maxLength: 255
        email:
          type: string
          nullable: true
          maxLength: 255
        gender:
          type: string
          maxLength: 255
        marital_status:
          type: string
          nullable: true
          maxLength: 255
        nationality:
          type: string
          maxLength: 255
        national_id:
          type: string
          maxLength: 255
        date_of_birth:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
      required:
      - full_name
      - gender
      - national_id
    Doctor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          maxLength: 255
        email:
          type: string
          nullable: true
          maxLength: 255
        gender:
          type: string
          maxLength: 255
        marital_status:
          type: string
          nullable: true
          maxLength: 255
        nationality:
          type: string
          maxLength: 255
        national_id:
          type: string
          maxLength: 255
        date_of_birth:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        speciality:
          type: string
          maxLength: 255
        license_number:
          type: string
          maxLength: 255
        experience_years:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
        work_days:
          type: string
          maxLength: 255
        user:
          type: integer
          nullable: true
      required:
      - full_name
      - gender
      - national_id
      - speciality
      - license_number
      - experience_years
      - work_days
    Phone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mobile:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - mobile
      - user
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        governorate:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - street
      - city
      - governorate
      - user
    UserImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: binary
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - image
      - user
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        permissions:
          type: array
          items:
            type: integer
      required:
      - name
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        codename:
          type: string
          maxLength: 100
        content_type:
          type: integer
      required:
      - name
      - codename
      - content_type
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - username
    Visit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        visit_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        ticket:
          type: string
          maxLength: 255
        datatime:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
        patient:
          type: integer
        doctors:
          type: array
          items:
            type: integer
      required:
      - ticket
      - patient
    Measurement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        height:
          type: string
          maxLength: 255
        weight:
          type: string
          maxLength: 255
        blood_pressure:
          type: string
          maxLength: 255
        temperature:
          type: string
          maxLength: 255
        pulse:
          type: string
          maxLength: 255
        oxygen_level:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        visit:
          type: integer
      required:
      - height
      - weight
      - blood_pressure
      - temperature
      - pulse
      - oxygen_level
      - visit
    Attachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: binary
        kind:
          type: string
          maxLength: 255
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        visit:
          type: integer
      required:
      - file
      - kind
      - visit
    Statistics:
      type: object
      properties:
        total_visits:
          type: integer
        total_patients:
          type: integer
        total_doctors:
          type: integer
        total_employees:
          type: integer
      required:
      - total_visits
      - total_patients
      - total_doctors
      - total_employees
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
